********************************************************************
1.subarray/substring mostly questions first brute force O(n^2) tk and then optimize using sliding window (sometimes use map,queue) according to qus given
2.subsequence(dp,two pointers ,sorting and something maintaining the index).DP k qus me mostly options se check take or not take sb.
3.anagrams qus mostly use(sort the words ,compare or store accordingly)
4. Two pointers me mostly i=0 and j=n-1 se condtion while(i<n && j>=0) ans if value bdi h target se then j-- else i++ (just think like binary search) 
5.inplace  qus me always 1-2 extra poinetr var leke krrte h  ussi arr me change

Similar Problems : 
// 1. Word Ladder (Leetcode)
// 2. Find jumping numbers less than x (GFG)
// 3. Gene Mutation (Leetcode)
// 4. Sequential Digits (Leetcode)